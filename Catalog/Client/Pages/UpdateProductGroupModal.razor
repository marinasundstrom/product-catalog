@using System.ComponentModel.DataAnnotations
@inject IProductsClient ProductsClient

<EditForm Model="@this" OnValidSubmit="OnSubmit">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label>Name</label>
        <InputText class="form-control" @bind-Value="Name" />
        <ValidationMessage For="() => Name" />
    </div>

    <div class="form-group">
        <label>Description</label>
        <InputTextArea class="form-control" @bind-Value="Description" />
        <ValidationMessage For="() => Description" />
    </div>

    <div class="mt-4">
        <button type="button" @onclick="async () => await Modal.CancelAsync()" class="btn btn-secondary me-2">Cancel</button>

        <button class="btn btn-primary me-2">Create</button>
    </div>

</EditForm>

@code {
    [CascadingParameter] BlazoredModalInstance Modal { get; set; }

    [Parameter] public ApiProductGroup ProductGroup { get; set; }

    [Required]
    public string Name { get; set; }

    public string? Description { get; set; }

    public int? Min { get; set; }

    public int? Max { get; set; }

    protected override void OnInitialized()
    {
        Name = ProductGroup.Name;
        Description = ProductGroup.Description;
    }

    async Task OnSubmit()
    {
        ApiUpdateProductGroup data = new()
        {
            Name = Name,
            Description = Description,
        };
        var result = await ProductsClient.UpdateProductGroupAsync(ProductGroup.Id, data);
        await Modal.CloseAsync(ModalResult.Ok(result));
    }

}

