@using System.ComponentModel.DataAnnotations
@inject IProductsClient ProductsClient

<EditForm Model="@this" OnValidSubmit="OnSubmit">
    <DataAnnotationsValidator />

    <MudDialog>
        <DialogContent>

            <MudTextField Label="Name" Class="mb-6" Variant="Variant.Outlined" @bind-Value="Name" For="() => Name" />

            <MudTextField Lines="3" Label="Description" Class="mb-6" Variant="Variant.Outlined" @bind-Value="Description" For="() => Description" />

            @if (Groups is not null)
            {
                <MudSelect T="ApiProductGroup" Label="Group" Class="mb-6" Variant="Variant.Outlined" @bind-Value="Group" ToStringFunc="x => x?.Name"
                           For="() => Group">
                    @foreach (var item in Groups)
                    {
                        <MudSelectItem Value="@item" />
                    }
                </MudSelect>
            }

            <MudCheckBox Label="Has variants" Class="mb-6" @bind-Checked="HasVariants" For="() => HasVariants" />

            @if (!HasVariants)
            {
                <MudTextField Label="SKU" Class="mb-6" Variant="Variant.Outlined" @bind-Value="SKU" For="() => SKU" />

                <MudNumericField Label="Price" Class="mb-6" Variant="Variant.Outlined" @bind-Value="Price" For="() => Price" />
            }

        </DialogContent>
        <DialogActions>
            <MudButton OnClick="() => Modal.Cancel()">Cancel</MudButton>
            <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary">Create</MudButton>
        </DialogActions>
    </MudDialog>

</EditForm>

@code {
    public IList<ApiProductGroup> Groups { get; set; }

    [CascadingParameter] MudDialogInstance Modal { get; set; }

    [Required]
    public string Name { get; set; }

    public bool HasVariants { get; set; }

    public string? Description { get; set; }

    public ApiProductGroup Group { get; set; }

    public string? SKU { get; set; }

    public decimal? Price { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var groups = await ProductsClient.GetProductGroupsAsync(true);
        Groups = groups.ToList();
        Group = groups.First();
    }

    async Task OnSubmit()
    {
        ApiCreateProduct data = new()
        {
            Name = Name,
            HasVariants = HasVariants,
            Description = Description,
            GroupId = Group.Id,
            Sku = SKU,
            Price = Price
        };

        var result = await ProductsClient.CreateProductAsync(data);
        Modal.Close(DialogResult.Ok(result));
    }
}

