@page "/products"
@inject IProductsClient ProductsClient

<PageTitle>Products</PageTitle>

<section class="py-5 text-center container">
    <div class="row py-lg-5">
        <div class="col-lg-6 col-md-8 mx-auto">
            <h1 class="fw-light">Products</h1>
            @*
                <p class="lead text-muted">Something short and leading about the collection below—its contents, the creator, etc. Make it short and sweet, but not too short so folks don’t simply skip over it entirely.</p>
                <p>
                    <a href="#" class="btn btn-primary my-2">Main call to action</a>
                    <a href="#" class="btn btn-secondary my-2">Secondary action</a>
                </p>
            *@
        </div>
    </div>
</section>

<div class="album py-5 bg-light">
    <div class="container">

        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3">
            @if (products == null)
            {
                <span>Loading...</span>
            }
            else
            {
                @foreach (var product in products)
                {
                    <div class="col">
                        <div class="card shadow-sm">
                            @if(product.Image is not null)
                            {
                                <img class="bd-placeholder-img card-img-top" style="width: 100%; height: 225px" src="@product.Image" />
                            }
                            else
                            {
                                <svg class="bd-placeholder-img card-img-top" width="100%" height="225" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Thumbnail" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#55595c"></rect><text x="50%" y="50%" fill="#eceeef" dy=".3em">Thumbnail</text></svg>
                            }

                            <div class="card-body">
                                <h4 class="card-title">@product.Name</h4>
                                <p class="card-text">@product.Description</p>
                                @if (product.HasVariants)
                                {
                                    <small> Har flera varianter</small>
                                }
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="btn-group">
                                        <a href="/products/@product.Id" class="btn btn-sm btn-outline-secondary">View</a>
                                        @* <button type="button" class="btn btn-sm btn-outline-secondary">Edit</button> *@
                                    </div>

                                    <small class="text-muted">@product.Price?.ToString("c")</small>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }

        </div>
    </div>
</div>

@code
{
    IEnumerable<ApiProduct>? products = null;

    protected override async Task OnInitializedAsync()
    {
        products = await ProductsClient.GetProductsAsync();
    }
}

